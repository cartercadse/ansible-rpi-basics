from rpi_hardware_pwm import HardwarePWM
from time import sleep

# To enable hardware pwm, add to /boot/config.txt: dtoverlay=pwm-2chan,pin=12,func=4,pin2=13,func2=4
# This will enable pwm channel 0 on GPIO 12 and channel 1 on GPIO 13
# Don't forget to reboot for this to have an effect

mintemp = {{ fan_min_temperature }}  # less than this and the fan is off
maxtemp = {{ fan_max_temperature }}  # more than this and the fan runs full speed

pwm = HardwarePWM(0, hz=25000)  # initialize PWM channel 0 with 25kHz
pwm.start(0)  # start off


def map(x, in_min, in_max, out_min, out_max):
    # Re-maps a number from one range to another and returns an integer
    return int((x-in_min) * (out_max-out_min) / (in_max-in_min) + out_min)


try:
    while True:
        with open("/sys/class/thermal/thermal_zone0/temp", "r") as t:
            temperature = int(t.readline().strip()) / 1000
        if temperature < mintemp:
            # fan is off when temp below mintemp
            dc = 0
        elif temperature > maxtemp:
            # fan is fully on when temp above maxtemp
            dc = 100
        else:
            # calculate duty cycle when temp is between min and max
            dc = map(temperature, mintemp, maxtemp, 0, 100)
        # set duty cycle
        pwm.change_duty_cycle(dc)
        # print out temperature and dc for debug reasons
        # print(f"Temperature: {temperature:4.2f}Â°C - DutyCycle: {dc}%")
        # sleep a second
        sleep(1)

except KeyboardInterrupt:
    # stop pwm in case the loop gets interrupted
    pwm.stop()
